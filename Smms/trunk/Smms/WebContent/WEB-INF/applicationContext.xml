<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
	<!-- JPA don't touch -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="SmmsPU" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
				<property name="showSql" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" />
		</property>
	</bean>
	<jee:jndi-lookup id="dataSource" jndi-name="java:/comp/env/jdbc/mysmmsDS" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- end JPA -->
	<!-- start Register Service 
	<bean id="registerDAO" class="biz.evolix.model.dao.RegisterDaoImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	-->
	<bean id="smileUsersDetailDAO" class="biz.evolix.model.dao.SmileUsersDetailDAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />	
	</bean>
	<bean id="authoritiesDAO" class="biz.evolix.model.dao.AuthoritiesDAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="pageDAO" class="biz.evolix.model.dao.PageDAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="newsDAO" class="biz.evolix.model.dao.NewsDAOImp" scope="prototype">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="registerService" class="biz.evolix.service.RegisterServiceImp" scope="session"/>	
	<!-- end of Register Service -->
	<!-- Start Organization Chart Service -->
	<bean id="orchartService" class="biz.evolix.service.OrchartServiceImp" />
	<bean id="node1DAO" class="biz.evolix.model.dao.Node1DAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="nodeDeptDAO" class="biz.evolix.model.dao.NodeDeptDAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="node1DAO" ref="node1DAO" />
		<property name="pageDAO" ref="pageDAO" />
	</bean>
	
	<!-- end of Organization Chart Service -->
	<!-- Start market service -->
	<bean id="inventoryService" class="biz.evolix.service.InventoryServiceImp" />
	<bean id="updateComService" class="biz.evolix.service.UpdateComServiceImp" />
	<bean id="findPlaceService" class="biz.evolix.service.FindPlaceServiceImp" />
	<bean id="findQuotaService" class="biz.evolix.service.FindQuotaServiceImp"/>
	<bean id="findMaxRegisterService" class="biz.evolix.service.FindMaxRegisterServiceImp" scope="session" />
	<bean id="orderService" class="biz.evolix.service.OrderServiceImp" scope="session"/>
	<bean id="purcheseService" class="biz.evolix.service.PurcheseServiceImp"
		scope="session" />	
	<bean id="skuDAO" class="biz.evolix.model.dao.SkuDAOImp" scope="prototype">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>	
	<bean id="staffDAO" class="biz.evolix.model.dao.StaffDAOImp" scope="prototype">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="orderDAO" class="biz.evolix.model.dao.OrderDAOImp">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="checkNameDAO" class="biz.evolix.model.dao.CheckDNameDAOImp" scope="prototype">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>	
	<bean id="userDAO" class="biz.evolix.model.dao.UsersDAOImp" scope="prototype">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="jdbcTeamsDAO" class="biz.evolix.model.dao.JdbcTeamsDAOImp" scope="session">
		<property name="dataSource" ref="dataSource" />
	</bean>			
	<bean id="downlineService" class="biz.evolix.service.DownlineServiceImp" scope="session" />	
	<bean id="userDetail" class="biz.evolix.secure.UserDetail" />
	<bean id="fetchUplineService" class="biz.evolix.service.FetchUplineServiceImp" scope="session" />
	<bean id="branceService" class="biz.evolix.service.BranceServiceImp" scope="session" />
	<bean id="staffService" class="biz.evolix.service.StaffServiceImp" scope="session" />
	<bean id="changePasswdService" class="biz.evolix.service.sub.imp.ChangePasswdServiceImp" scope="session" />
	<bean id="roleService" class="biz.evolix.service.sub.RoleServiceImp" scope="session" />
	<bean id="fetchListTeams" class="biz.evolix.service.FetchListTeamsImp" scope="session" />
	<bean id="staffMemberService" class="biz.evolix.service.sub.StaffMemberServiceImp" scope="session" />
	<bean id="fetchProvince" class="biz.evolix.model.dao.ProvinceDAOImp" scope="prototype" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="fetchBrance" class="biz.evolix.model.dao.BranceDAOImp" scope="prototype" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- ^^^^^^^^^^begin Faces action^^^^^^^^^^^^6 -->
	<bean id="loadSkusAct" class="com.smms.action.LoadSkusAct" scope="prototype">
		<constructor-arg ref="skuDAO" />
	</bean>
	<bean id="loadSkus2" class="com.smms.action.LoadSkus2" scope="prototype">
		<constructor-arg ref="skuDAO" />
	</bean>
	
	<bean id="loadUsers" class="com.smms.action.LoadSkusAct" scope="prototype">
		<constructor-arg ref="authoritiesDAO" />
	</bean>
	<bean id="procheseAct" class="com.smms.action.ProcheseAct" scope="session">
		<constructor-arg ref="purcheseService" />
	</bean>
	<bean id="editOrderAct" class="com.smms.action.EditOrderAct"
		scope="request">
		<constructor-arg ref="purcheseService" />
	</bean>
	<bean id="blackOfficeAct" class="com.smms.action.BlackOffice"
		scope="session">
		<constructor-arg ref="purcheseService" />
	</bean>
	<bean id="subBackOffice" class="com.smms.action.SubBackOffice"
		scope="session">
		<constructor-arg ref="purcheseService" />
	</bean>
	<bean id="buyOrder" class="com.smms.action.BuyOrder" scope="session">
		<constructor-arg ref="purcheseService" />
	</bean>
	<bean id="registerServiceAct" scope="request" class="biz.evolix.action.register.Register">
		<constructor-arg index="0" ref="registerService" />
		<constructor-arg index="1" ref="checkNameDAO" />
	</bean>
	<bean id="fetchUpLine" scope="prototype" class="biz.evolix.action.register.FetchUpline">
		<constructor-arg ref="fetchUplineService" />
	</bean>
	<bean id="orchartServiceAct" scope="prototype" class="biz.evolix.action.organization.Organization">
		<constructor-arg ref="orchartService" />
	</bean>
	<bean id="orchartSearchMemberAct" scope="prototype" class="biz.evolix.action.organization.OrganizationSearchMember">
		<constructor-arg ref="orchartService" />
	</bean>
	<bean id="orchartBackwardAct" scope="prototype" class="biz.evolix.action.organization.OrganizationBackward">
		<constructor-arg ref="orchartService" />
	</bean>
	<bean id="inventoryServiceAct" class="biz.evolix.action.managesku.EditProduct"
		scope="prototype">
		<constructor-arg ref="inventoryService" />
	</bean>
	<bean id="editAdddelSkuAct" class="biz.evolix.action.managesku.AddSkuAct"
		scope="prototype">
		<constructor-arg ref="inventoryService" />
	</bean>
	<bean id="editOrder" class="biz.evolix.action.backoffice.EditOrderAction"
		scope="prototype">
		<constructor-arg ref="orderService" />
	</bean>
	<bean id="showOrdered" class="biz.evolix.action.backoffice.ShowOrdered"
		scope="prototype">
		<constructor-arg ref="orderService" />
	</bean>
	<bean id="subShowPurcheseAction" class="biz.evolix.action.backoffice.SubShowPurcheseAction"
		scope="prototype">
		<constructor-arg ref="orderService" />
	</bean>
	<bean id="subOrderAction" class="biz.evolix.action.order.SubOrder"
		scope="session">
		<constructor-arg ref="orderService" />
	</bean>
	<bean id="orderAction" class="biz.evolix.action.order.Order"
		scope="session">
		<constructor-arg ref="orderService" />
	</bean>
	<bean id="fetchProvinceJSONAction" class="biz.evolix.action.global.FetchProvinceJSON"
		scope="prototype">
		<constructor-arg ref="fetchProvince" />
	</bean>
	<bean id="fetchProvinceAction" class="biz.evolix.action.global.FetchProvince"
		scope="prototype">
		<constructor-arg ref="fetchProvince" />
	</bean>
	<bean id="fetchBranceJSON" class="biz.evolix.action.global.FetchBranceJSON"
		scope="prototype">
		<constructor-arg ref="fetchBrance" />
	</bean>
	<bean id="fetchBranceAct" class="biz.evolix.action.global.FetchBrance"
		scope="prototype">
		<constructor-arg ref="fetchBrance" />
	</bean>
	<bean id="checkNameAction" class="biz.evolix.action.register.CheckDisplayName"
		scope="prototype">
		<constructor-arg ref="checkNameDAO" />
	</bean>
	<bean id="branceManAct" class="biz.evolix.action.role.BranceManAct"
		scope="prototype">
		<constructor-arg ref="branceService" />
	</bean>
	<bean id="member" class="com.smms.action.Member"
		scope="session">
		<constructor-arg ref="userDAO" />
	</bean>
	<bean id="chkLevelAct" scope="prototype" class="biz.evolix.action.register.ChkLevelAct">
		<constructor-arg  ref="registerService" />		
	</bean>	
	<bean id="editBranceAct" scope="prototype" class="biz.evolix.action.role.EditBrance">
		<constructor-arg  ref="branceService" />		
	</bean>
	<bean id="cardManageAct" scope="prototype" class="biz.evolix.action.role.CardManageAct">
		<constructor-arg  ref="roleService" />		
	</bean>
	<bean id="roleManAct" scope="prototype" class="biz.evolix.action.role.RoleManAct">
		<constructor-arg  ref="roleService" />		
	</bean>
	<bean id="editRoleAct" scope="prototype" class="biz.evolix.action.role.EditRoleAct">
		<constructor-arg  ref="roleService" />		
	</bean>
	<bean id="editCardManAct" scope="prototype" class="biz.evolix.action.role.EditCardManAct">
		<constructor-arg  ref="roleService" />		
	</bean>
	<bean id="changePasswdAct" scope="session" class="biz.evolix.action.register.ChangePasswdAct">
		<constructor-arg  ref="changePasswdService" />		
	</bean>
	<bean id="noticeAct" scope="prototype" class="biz.evolix.action.index.NoticeAct">
		<constructor-arg  ref="newsDAO" />		
	</bean>
	<bean id="activityAct" scope="prototype" class="biz.evolix.action.index.ActivityAct">
		<constructor-arg  ref="newsDAO" />		
	</bean>
	<bean id="saveActivityAct" scope="prototype" class="biz.evolix.action.index.SaveActivityAct">
		<constructor-arg  ref="newsDAO" />		
	</bean>
	<bean id="saveNoticeAct" scope="prototype" class="biz.evolix.action.index.SaveNoticeAct">
		<constructor-arg  ref="newsDAO" />		
	</bean>
	<bean id="gridDownlineAct" scope="session" class="biz.evolix.action.member.GridDownlineAct">
		<constructor-arg  ref="downlineService" />		
	</bean>
	<bean id="gridTeamsAct" scope="prototype" class="biz.evolix.action.member.GridTeamsAct">
		<constructor-arg  ref="fetchListTeams" />		
	</bean>	
	<bean id="findMaxRegisterAct" scope="prototype" class="biz.evolix.action.register.FindMaxRegisterAct">
		<constructor-arg  ref="findMaxRegisterService" />		
	</bean>
	<bean id="chkCreateAccountAct" scope="prototype" class="biz.evolix.action.register.ChkCreateAccountAct">
		<constructor-arg  ref="findQuotaService" />		
	</bean>
	<bean id="staffManAct" scope="prototype" class="biz.evolix.action.role.StaffManAct">
		<constructor-arg  ref="staffService" />		
	</bean>
	<bean id="staffMemberManAct" scope="prototype" class="biz.evolix.action.staff.StaffMemberManAct">
		<constructor-arg  ref="staffMemberService" />		
	</bean>
	<bean id="editstaffMemberManAct" scope="prototype" class="biz.evolix.action.staff.EditStaffMemberAct">
		<constructor-arg  ref="staffMemberService" />		
	</bean>
	<bean id="staffEditAct" scope="prototype" class="biz.evolix.action.role.EditStaffAct">
		<constructor-arg  ref="staffService" />		
	</bean>
	<bean id="resetPasswdAct" scope="prototype" class="biz.evolix.action.role.ResetPasswdAct">
		<constructor-arg  ref="roleService" />		
	</bean>
	<!-- end faces action -->
	<context:annotation-config />
</beans>
